{"remainingRequest":"/home/alan/Documents/Learn/vuejs/calculator/calculator/node_modules/babel-loader/lib/index.js!/home/alan/Documents/Learn/vuejs/calculator/calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alan/Documents/Learn/vuejs/calculator/calculator/src/components/Calculator.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/alan/Documents/Learn/vuejs/calculator/calculator/src/components/Calculator.vue","mtime":1530235030931},{"path":"/home/alan/Documents/Learn/vuejs/calculator/calculator/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/alan/Documents/Learn/vuejs/calculator/calculator/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/alan/Documents/Learn/vuejs/calculator/calculator/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.promise\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _ = require('lodash');\n\nimport NumberButton from \"./NumButton\";\nimport SymbolButton from \"./SymbolButton\";\nimport DisplayBar from \"./DisplayBar\";\nvar numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', \".\"];\nvar symbols = [\"AC\", \"+/-\", \"%\", '+', '-', '*', '/', '='];\nvar symbolDict = {\n  '+': _.add,\n  '-': _.subtract,\n  '*': _.multiply,\n  '/': _.divide\n};\nexport default {\n  name: \"calculator\",\n  data: function data() {\n    return {\n      numbers: numbers,\n      symbols: symbols,\n      symbolDict: symbolDict,\n      displayData: \"\",\n      isResult: false,\n      isAfterEqual: false,\n      result: 0,\n      memData: 0,\n      operator: \"\"\n    };\n  },\n  components: {\n    NumberButton: NumberButton,\n    SymbolButton: SymbolButton,\n    DisplayBar: DisplayBar\n  },\n  methods: {\n    initialize: function initialize() {\n      this.isResult = false;\n      this.isAfterEqual = false;\n      this.displayData = \"\";\n      this.result = 0;\n      this.memData = 0;\n      this.operator = \"\";\n    },\n    calculate: function calculate(operator, data) {\n      this.memData = this.symbolDict[operator](this.memData, data);\n      this.displayData = this.memData.toString();\n    },\n    decide: function decide(operator, data) {\n      if (this.isResult) {\n        calculate(operator, data);\n        this.operator = \"\";\n      } else {\n        this.displayData = this.symbolDict[operator](this.displayData, data).toString();\n      }\n    },\n    changeDisplay: function changeDisplay(e) {\n      if (this.isResult) {\n        this.displayData = e;\n        this.isResult = false;\n      } else {\n        this.displayData += e;\n      }\n    },\n    handleSymbol: function handleSymbol(e) {\n      this.isResult = true;\n\n      if (e === \"AC\") {\n        this.initialize();\n      } else if (e === \"+/-\") {\n        this.decide(\"*\", -1);\n      } else if (e === \"%\") {\n        this.decide(\"*\", 0.01);\n      } else if (e === \"=\") {\n        this.calculate(this.operator, parseFloat(this.displayData));\n        this.operator = \"\";\n        this.isAfterEqual = true;\n      } else {\n        this.operator = this.operator ? this.operator : e;\n\n        if (!this.isAfterEqual) {\n          this.memData = this.symbolDict[this.operator](this.memData, parseFloat(this.displayData));\n        }\n\n        this.isAfterEqual = false;\n        this.operator = e;\n        this.displayData = this.memData.toString();\n      }\n    }\n  }\n};",{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"container\">\n        <display-bar :displayData=\"displayData\" id=\"display\"/>\n        <div id=\"num-pad\">\n            <div v-for=\"num in numbers\" :key=\"num\">\n                <number-button :name=\"num\" @numClicked=\"changeDisplay($event)\"/>\n            </div>\n        </div>\n        <div id=\"symbol-pad\">\n            <div v-for=\"item in symbols\" :key=\"item.id\">\n                <symbol-button :name=\"item\" @symClicked=\"handleSymbol($event)\"/>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nconst _ = require('lodash')\nimport NumberButton from \"./NumButton\"\nimport SymbolButton from \"./SymbolButton\"\nimport DisplayBar from \"./DisplayBar\"\n\nlet numbers = ['1','2','3','4','5','6','7','8','9','0',\".\"]\nlet symbols = [\"AC\",\"+/-\",\"%\",'+','-','*','/','=']\nlet symbolDict = {\n    '+':_.add,\n    '-':_.subtract,\n    '*':_.multiply,\n    '/':_.divide\n}\n\n    export default {\n        name:\"calculator\",\n        data(){\n            return {\n                numbers,\n                symbols,\n                symbolDict,\n                displayData:\"\",\n                isResult:false,\n                isAfterEqual:false,\n                result:0,\n                memData:0,\n                operator:\"\",\n\n            }\n        },\n        components:{\n            NumberButton,\n            SymbolButton,\n            DisplayBar,\n        },\n        methods:{\n            initialize(){\n                this.isResult = false\n                this.isAfterEqual = false\n                this.displayData = \"\"\n                this.result = 0\n                this.memData = 0\n                this.operator = \"\"\n            },\n            calculate(operator,data){\n                this.memData = this.symbolDict[operator](this.memData, data)\n                this.displayData = this.memData.toString()\n            },\n            decide(operator,data){\n                if(this.isResult){\n                    calculate(operator,data)\n                    this.operator = \"\"\n                }else{\n                    this.displayData = this.symbolDict[operator](this.displayData, data).toString()\n                }\n            },\n            changeDisplay(e){\n                if(this.isResult){\n                    this.displayData = e\n                    this.isResult = false\n                }else{\n                    this.displayData += e\n                }\n            },\n            handleSymbol(e){\n                this.isResult = true\n                if(e===\"AC\"){\n                    this.initialize()\n                }\n                else if(e===\"+/-\"){\n                    this.decide(\"*\",-1)\n                }\n                else if(e===\"%\"){\n                    this.decide(\"*\",0.01)\n                }\n                else if(e===\"=\"){\n                    this.calculate(this.operator,parseFloat(this.displayData))\n                    this.operator = \"\"\n                    this.isAfterEqual = true\n                }\n                else{\n                    this.operator = this.operator ? this.operator : e\n                    if(!this.isAfterEqual){\n                        this.memData = this.symbolDict[this.operator](this.memData, parseFloat(this.displayData))\n                    }\n                    this.isAfterEqual=false\n                    this.operator = e\n                    this.displayData = this.memData.toString()\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped >\n#container{\n    margin: 0 25%;\n    display: grid;\n    align-content: space-around;\n    justify-content: space-between;\n    grid-template-areas: \n    \"d d d d\"\n    \"n n n s\"\n    \"n n n s\"\n    \"n n n s\"\n    \"n n n s\"\n    \"n n n s\"\n    ;\n}\n\n#display{\n    grid-area: d;\n}\n\n#num-pad{\n    grid-area: n;\n    display: grid;\n    grid-template-columns: repeat(3,1fr);\n}\n\n#symbol-pad{\n    display: grid;\n}\n</style>"],"sourceRoot":"src/components"}]}